/*
 * user_main.c
 *
 *  Created on: Apr 20, 2025
 *      Author: sandeep
 */

#include "stm32f4xx_hal.h"
#include "stm32f4xx_hal_rcc.h"



void Error_Handler(void)
{
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1)
  {
  }
  /* USER CODE END Error_Handler_Debug */
}


UART_HandleTypeDef huart2;

int main(void)
{

	RCC_OscInitTypeDef osc_init;
	RCC_ClkInitTypeDef clk_init;


	HAL_Init();

	MX_USART2_UART_Init();



	/* Oscillator initialization */
	memset(&osc_init,0,sizeof(osc_init));
	osc_init.OscillatorType = RCC_OSCILLATORTYPE_HSE;
	osc_init.HSEState = RCC_HSE_BYPASS;

	if(HAL_RCC_OscConfig(&osc_init) != HAL_OK)
	{
		Error_Handler();
	}

	/* Clock Initialization */
	memset(&clk_init,0,sizeof(clk_init));


	clk_init.ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_PCLK1 | RCC_CLOCKTYPE_PCLK2;
	clk_init.SYSCLKSource = RCC_SYSCLKSOURCE_HSE;
	clk_init.AHBCLKDivider = RCC_SYSCLK_DIV2;
	clk_init.APB1CLKDivider = RCC_HCLK_DIV2;
	clk_init.APB2CLKDivider = RCC_HCLK_DIV2;

	if(HAL_RCC_ClockConfig(&clk_init, FLASH_LATENCY_0) != HAL_OK)
	{
		Error_Handler();
	}

	/* disable internal clock */
	__HAL_RCC_HSI_DISABLE();



	while(1);

	return 0;
}
